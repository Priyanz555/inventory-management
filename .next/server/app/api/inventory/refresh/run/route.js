"use strict";(()=>{var e={};e.id=7738,e.ids=[7738],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},800:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>l,staticGenerationAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{POST:()=>i});var n=t(9303),a=t(8716),o=t(670),u=t(7070);async function i(){try{await new Promise(e=>setTimeout(e,2e3));let e=Date.now().toString();return u.NextResponse.json({status:"Success",message:"Inventory refresh completed successfully",runId:e,processedSKUs:150,updatedBalances:150})}catch(e){return u.NextResponse.json({status:"Error",message:"Failed to refresh inventory balances"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/inventory/refresh/run/route",pathname:"/api/inventory/refresh/run",filename:"route",bundlePath:"app/api/inventory/refresh/run/route"},resolvedPagePath:"/Users/priyadarshan.b/InvMgmt/src/app/api/inventory/refresh/run/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:l}=p,h="/api/inventory/refresh/run/route";function v(){return(0,o.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:c})}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9276,5972],()=>t(800));module.exports=s})();